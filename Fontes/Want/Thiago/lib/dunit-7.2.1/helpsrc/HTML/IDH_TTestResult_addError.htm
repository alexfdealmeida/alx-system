<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Time2HELP 1.0; Standard Template">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<TITLE>TTestResult.AddError Method</TITLE>
<Style>Body, TD {font-family: "Verdana"; font-size: 10pt};
PRE {font-size: 10pt; margin-top: 0; margin-bottom: 0}</Style>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<BASEFONT NAME="verdana" Size="2"><Table Border="0" Width="100%" BGColor="#FFFF00"><TR><TD><Font Color="#000000F"><B>AddError method</B></Font></TD></TR></Table>Adds an error to the list of errors.<P><B>Applies to</B><Br><A HREF="IDH_Class_TTestResult.htm">TTestResult</A><P><B>Declaration</B><Br><Font Face="Courier New"><B>Function</B> AddError(test: <A HREF="IDH_Interface_ITest.htm">ITest</A>; e: Exception; msg :<B>string</B> = <Font Color="#119911">''</Font>): <A HREF="IDH_Class_TTestFailure.htm">TTestFailure</A>;</Font><Br/><Img Src="images/virtual.gif"/><P><B>Description</B><Br>Creates a TTestFailure recording that an error occurred in test. Notifies any registered ITestListeners that an error occurred. The TTestFailure returned should not be freed.<P><Table Border="0" Width="100%" BGColor="#000000"><TR><TD><Font Color="#FFFFFF"><B>Parameters</B></Font></TD></TR></Table><Table BGColor="#EEEEEE" Width="100%" CellSpacing="0"><TR><TD><Font Color="Blue">test&nbsp;</Font></TD><TD>The test with an error.</TD></TR><TR><TD><Font Color="Blue">e&nbsp;</Font></TD><TD>The exception that caused the error.</TD></TR></Table></P><P><B>Returns</B><Br>the TTestFailure object representing this error.<Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>function</B> TTestResult.AddError(test: <A HREF="IDH_Interface_ITest.htm">ITest</A>; e: Exception; msg :<B>string</B>): <A HREF="IDH_Class_TTestFailure.htm">TTestFailure</A>;
<B>var</B>
  i: integer;
  error : <A HREF="IDH_Class_TTestFailure.htm">TTestFailure</A>;
<B>begin</B>
  assert(assigned(test));
  assert(assigned(e));
  assert(assigned(fErrors));

  error := TTestFailure.Create(test, e, msg);
  fErrors.add(error);
  <B>for</B> i := 0 <B>to</B> fListeners.count - 1 <B>do</B>
  <B>begin</B>
    (fListeners[i] <B>as</B> <A HREF="IDH_Interface_ITestListener.htm">ITestListener</A>).AddError(error);
  <B>end</B>;

  assert(assigned(error));
  Result := error;
<B>End</B>;</pre></td></tr></Table><P><HR>
<TABLE BORDER="0" WIDTH="100%" BGCOLOR="#000000"><TR><TD>
<Font Color=White><Large>HTML generated by <B>Time2HELP</B></Large></Font>
</TD></TR></Table>
<Small><A HREF="http://www.time2help.com">http://www.time2help.com</A></Small></Body></HTML>